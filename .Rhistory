link <- "https://raw.githubusercontent.com/FLS-6497/datasets/main/aula4/eleicoes_mun_2018.csv"
elei18 <- readr::read_csv2(link)
elei18 <- elei18 %>%
mutate(pibpc = pib_total / aptos_2018) %>%
mutate(pibpc = scale(pibpc))
library("mlr3verse")
task = tsk("iris")
library(tidyverse)
library(glmnet)
link <- "https://raw.githubusercontent.com/jacobwright32/Web_Scraper_AI_Core_Project/bb4865ae568e23ab8fadb6ea58cf117df2164ef3/web%20scraping/Cleaned%20Data/Brazil_Sao%20Bernardo%20Do%20Campo_Cleaned.csv"
dados <- readr::read_csv(link)
dados <- dados %>%
select_if(is.numeric)
tsk <- as_task_regr(humidity ~ maximum_temprature + wind_speed, data = dados)
learner <- lrn("regr.lm")
resampling <- rsmp("holdout", ratio = 0.7)
resultados <- resample(tsk, learner, resampling)
measure <- msrs(c("regr.mae", "regr.mse"))
res <- resultados$score(measure, ids = FALSE, predict_sets = "test")
roda_modelo <- function() {
tsk <- as_task_regr(humidity ~ maximum_temprature + wind_speed, data = dados)
learner <- lrn("regr.lm")
resampling <- rsmp("holdout", ratio = 0.7)
resultados <- resample(tsk, learner, resampling)
measure <- msrs(c("regr.mse", "regr.rmse"))
res <- resultados$score(measure, ids = FALSE, predict_sets = "test")
as.numeric(res[1, 7])
}
roda_modelo <- function(algoritmo) {
tsk <- as_task_regr(humidity ~ maximum_temprature + wind_speed, data = dados)
learner <- lrn(algoritmo)
resampling <- rsmp("holdout", ratio = 0.7)
resultados <- resample(tsk, learner, resampling)
measure <- msrs(c("regr.mse", "regr.rmse"))
res <- resultados$score(measure, ids = FALSE, predict_sets = "test")
as.numeric(res[1, 7])
}
roda_modelo_com_alpha <- function(algoritmo = "regr.glmnet", alpha) {
tsk <- as_task_regr(humidity ~ maximum_temprature + wind_speed, data = dados)
learner <- lrn(algoritmo, alpha=alpha)
resampling <- rsmp("holdout", ratio = 0.7)
resultados <- resample(tsk, learner, resampling)
measure <- msrs(c("regr.mse", "regr.rmse"))
res <- resultados$score(measure, ids = FALSE, predict_sets = "test")
as.numeric(res[1, 7])
}
rep <- numeric(100)
for (i in 1:length(rep)) {
rep[i] <- roda_modelo("regr.lm")
}
measure <-  msr("regr.mae")
res <- resultados$score(measure, predict_sets = "test")
as.numeric(res[1,9])
learner <- lrn("regr.lm") # Lasso
# Ou
learner2 <- lrn("regr.glmnet", alpha = 1) # RIDGE
1:5 %>%
map_dbl(~ roda_modelo_com_alpha("regr.glmnet", alpha =1))
c("regr.lm", "regr.glmnet") %>%
map_dbl(~ roda_modelo(.x))
elei18 <- elei18 %>% mutate(votos = votos_bolsonaro_2t_2018/aptos_2018)
elei18 <- elei18 %>%
mutate(pibpc = pib_total / aptos_2018) %>%
mutate(pibpc = scale(pibpc))
elei18 %>%
ggplot(aes(x= pibpc, y = votos))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)
tsk <- as_task_regr(votos ~ pibpc, data = elei18)
learner <- lrn ("regr.lm")
reseampling <- rsmp ("holdout", ratio = 0.7)
resultados <- resample (tsk, learner, resampling)
measure <-  msr ("regr.rmse")
resultados$score(measure, predict_sets = "test")
elei18 <- elei18 %>%
mutate(pibpadrão = pib_total / aptos_2018) %>%
View(elei18)
elei18 <- elei18 %>%
group_by(região) %>%
summarise(n= sum(pibpc, na.rm = T)) %>%
ggplot(aes(x= pibpc, y = votos))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)
elei18 <- elei18 %>%
group_by(regiao) %>%
summarise(n= sum(pibpc, na.rm = T)) %>%
ggplot(aes(x= pibpc, y = votos))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)
elei18 <- elei18 %>%
mutate(pibpc = pib_total / aptos_2018) %>%
mutate(pibpc = scale(pibpc))
elei18 <- elei18 %>%
mutate(pibpc = pib_total / aptos_2018) %>%
mutate(pibpc = scale(pibpc))
elei18 <- elei18 %>% mutate(votos = votos_bolsonaro_2t_2018/aptos_2018)
link <- "https://raw.githubusercontent.com/FLS-6497/datasets/main/aula4/eleicoes_mun_2018.csv"
elei18 <- readr::read_csv2(link)
elei18 <- elei18 %>% mutate(votos = votos_bolsonaro_2t_2018/aptos_2018)
elei18 <- elei18 %>%
mutate(pibpc = pib_total / aptos_2018) %>%
mutate(pibpc = scale(pibpc))
elei18 %>%
ggplot(aes(x= pibpc, y = votos))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)
elei18 %>%
group_by(regiao) %>%
summarise(n= sum(pibpc, na.rm = T)) %>%
ggplot(aes(x= pibpc, y = votos))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)
elei18 %>%
group_by(regiao) %>%
summarise(n= sum(pibpc[,1], na.rm = T)) %>%
ggplot(aes(x= pibpc[,1], y = votos))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)
elei18 <- elei18 %>%
mutate(pibpc = pib_total / aptos_2018) %>%
mutate(pibpc = scale(pibpc))
elei18 %>%
ggplot(aes(x= pibpc, y = votos))+
geom_point(alpha = 0.3)+
geom_smooth(se = F)
library("mlr3")
task = tsk("iris")
learner = lrn("classif.rpart")
library(tidyverse)
link <- "https://raw.githubusercontent.com/jacobwright32/Web_Scraper_AI_Core_Project/bb4865ae568e23ab8fadb6ea58cf117df2164ef3/web%20scraping/Cleaned%20Data/Brazil_Sao%20Bernardo%20Do%20Campo_Cleaned.csv"
dados <- readr::read_csv(link)
dados %>%
ggplot() +
geom_point(aes(x=maximum_temprature, y=cloud_coverage)) +
geom_smooth(aes(x=maximum_temprature, y=cloud_coverage), method="lm", se=F)
dadoslongos <- dados %>%
#secet_if(is.numeric) para selecionar apenas as variaveis numericas
select_if(is.numeric) %>%
#em pivot_longer selecionaremos todas menos a maximumtemprature
pivot_longer(cols=c(-maximum_temprature))
dadoslongos
G2 <- dadoslongos %>%
ggplot(aes(x=maximum_temprature, y=value)) +
geom_point(color="steelblue") +
geom_smooth(method = "lm", se = F)+
facet_wrap(~ name, scales="free")
ggsave(G2, file = paste0("grafico.png"), widht=10, height=10)
#o prof. fez um tible que eu não entendi, mas o p era o objeto.
p <- ggplot()
ggsave(p, file = paste0("grafico.png"))
modelo <- lm(maximum_temprature ~ humidity + cloud_coverage + pressure + minimum_temprature, data=dados)
modelo
#vamos registrar o modelo de previsão
dados$predicao <- predict(modelo)
dados %>%
filter(date >as.Date("2020-01-01")) %>%
arrange(maximum_temprature) %>%
mutate(id = 1:n()) %>%
select(id, maximum_temprature, predicao) %>%
pivot_longer(-id) %>%
mutate(name = fct_relevel(name, "predicao")) %>%
ggplot(aes(x=id, y=value, color=name))+
geom_line()
funcao <- function(){
dados %>%
sample_n(1000)%>%
summarize(humidity=mean(humidity)) %>%
pluck("humidity")
}
outrafuncao <- function(){
sample(dados$humidity,1000) %>%
mean()
}
mean_humidity <- replicate(n= 1000, outrafuncao())
mean_humidity
x <- 10:1
x[3]
simulacao <- numeric(1000)
for(i in 1:1000){
simulacao[i] <- outrafuncao()
}
simulacao
nova_funcao <- function(){
dados %>%
sample_n(1000)%>%
lm(humidity ~ wind_speed + maximum_temprature, data= .) %>%
summary() %>%
pluck("r.squared")
}
#o output de summary é uma lista. Como está salvo, você extrai com pluck essa distribuição do R quadrado.
#é bom para validação, quando sorteamos outra amostras para validar se o modelo é bom para isso.
elei18 %>%
pivot_longer(-pibpc) %>%
group_by(semiarido,pibpc) %>%
summarise(n= sum(value, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
pivot_longer(pibpc) %>%
group_by(semiarido,pibpc) %>%
summarise(n= sum(value, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
pivot_longer(-pibpc) %>%
group_by(semiarido,pibpc) %>%
summarise(n= sum(value, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
pivot_longer(-pibpc) %>%
group_by(semiarido,regiao) %>%
summarise(n= sum(value, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
pivot_longer(-pibpc,regiao) %>%
group_by(semiarido,regiao) %>%
summarise(n= sum(value, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(semiarido,regiao) %>%
summarise(n= sum(value, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(semiarido,regiao) %>%
summarise(n= sum(pibpc, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(semiarido,regiao) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(semiarido,regiao, pibpc) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(semiarido,regiao, pibpc, votos) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(semiarido, pibpc, votos) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(semiarido) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(semiarido, pibpc) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(semiarido, pibpc) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(semiarido, votos) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(semiarido) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
pivot_longer(-semiarido) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
pivot_longer(-semiarido) %>%
group_by(votos,pibpc) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(votos,pibpc) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(pibpc) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(pibpc, semiarido) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
elei18 %>%
group_by(pibpc, semiarido, votos) %>%
summarise(n= sum(votos, na.rm = T)) %>%
ggplot(aes(x=pibpc, y = votos))+
geom_col()+
facet_wrap(~ semiarido,scales = "free")
